{"version":3,"sources":["../../js/InitCanvas.js"],"names":["InitCanvas","IdDiv","Filename","prototype","constructor","init","container","document","getElementById","innerHeight","innerWidth","camera","THREE","PerspectiveCamera","position","z","scene","Scene","add","dirLight","DirectionalLight","set","normalize","target","loader","NRRDLoader","load","volume","sliceZ","extractSlice","Math","floor","RASDimensions","iLength","jLength","mesh","material","color","setRGB","console","log","bind","renderer","WebGLRenderer","alpha","renderTarget","WebGLRenderTarget","domElement","clientWidth","clientHeight","setPixelRatio","devicePixelRatio","setSize","appendChild","animate","render"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEAA,aAAa,oBAAUC,KAAV,EAAiBC,QAAjB,EAA2B;;AAGpC,aAAKD,KAAL,GAAaA,KAAb;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACH,CALD;;AAOAF,WAAWG,SAAX,GAAuB;;AAEnBC,qBAAaJ,UAFM;;AAInBK,cAAM,gBAAY;;AAEd,qBAAKC,SAAL,GAAiBC,SAASC,cAAT,CAAwB,KAAKP,KAA7B,CAAjB;;AAEA;AACA,qBAAKK,SAAL,CAAeG,WAAf,GAA6B,GAA7B;AACA,qBAAKH,SAAL,CAAeI,UAAf,GAA4B,GAA5B;;AAEA;AACA,qBAAKC,MAAL,GAAc,IAAIC,MAAMC,iBAAV,CAA4B,EAA5B,EAAgC,KAAKP,SAAL,CAAeI,UAAf,GAA4B,KAAKJ,SAAL,CAAeG,WAA3E,EAAwF,IAAxF,EAA8F,IAA9F,CAAd;AACA,qBAAKE,MAAL,CAAYG,QAAZ,CAAqBC,CAArB,GAAyB,GAAzB;;AAEA,oBAAIC,QAAQ,IAAIJ,MAAMK,KAAV,EAAZ;AACAD,sBAAME,GAAN,CAAU,KAAKP,MAAf;;AAEA;;AAEA,oBAAIQ,WAAW,IAAIP,MAAMQ,gBAAV,CAA2B,QAA3B,CAAf;AACAD,yBAASL,QAAT,CAAkBO,GAAlB,CAAsB,GAAtB,EAA2B,GAA3B,EAAgC,IAAhC,EAAsCC,SAAtC;;AAEA,qBAAKX,MAAL,CAAYO,GAAZ,CAAgBC,QAAhB;AACA,qBAAKR,MAAL,CAAYO,GAAZ,CAAgBC,SAASI,MAAzB;;AAGA;;AAEA,oBAAIC,SAAS,IAAIZ,MAAMa,UAAV,EAAb;AACAD,uBAAOE,IAAP,CAAY,KAAKxB,QAAjB,EAA2B,UAAUyB,MAAV,EAAkB;;AAEzC;AACA,4BAAIC,SAASD,OAAOE,YAAP,CAAoB,GAApB,EAAyBC,KAAKC,KAAL,CAAWJ,OAAOK,aAAP,CAAqB,CAArB,IAA0B,CAArC,CAAzB,CAAb;;AAEA,6BAAK1B,SAAL,CAAeI,UAAf,GAA4BkB,OAAOK,OAAnC;AACA,6BAAK3B,SAAL,CAAeG,WAAf,GAA6BmB,OAAOM,OAApC;;AAEAN,+BAAOO,IAAP,CAAYC,QAAZ,CAAqBC,KAArB,CAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC;;AAGAC,gCAAQC,GAAR,CAAY,gBAAZ,EAA8BZ,MAA9B;;AAEAZ,8BAAME,GAAN,CAAUU,OAAOO,IAAjB;AACH,iBAd0B,CAczBM,IAdyB,CAcpB,IAdoB,CAA3B;;AAiBA,qBAAKzB,KAAL,GAAaA,KAAb;;AAGA;AACA,qBAAK0B,QAAL,GAAgB,IAAI9B,MAAM+B,aAAV,CAAwB,EAACC,OAAO,IAAR,EAAxB,CAAhB;AACA,qBAAKC,YAAL,GAAoB,IAAIjC,MAAMkC,iBAAV,CAA4B,KAAKJ,QAAL,CAAcK,UAAd,CAAyBC,WAArD,EAAkE,KAAKN,QAAL,CAAcK,UAAd,CAAyBE,YAA3F,CAApB;AACA,qBAAKP,QAAL,CAAcQ,aAAd,CAA4B,KAAK5C,SAAL,CAAe6C,gBAA3C;AACA,qBAAKT,QAAL,CAAcU,OAAd,CAAsB,KAAK9C,SAAL,CAAeI,UAArC,EAAiD,KAAKJ,SAAL,CAAeG,WAAhE;;AAEA;AACA,qBAAKH,SAAL,CAAe+C,WAAf,CAA2B,KAAKX,QAAL,CAAcK,UAAzC;AAGH,SA7DkB;;AA+DnBO,iBAAS,mBAAY;;AAEjB,qBAAKZ,QAAL,CAAca,MAAd,CAAqB,KAAKvC,KAA1B,EAAiC,KAAKL,MAAtC,EAA8C,KAAKkC,YAAnD;AACH;;AAlEkB,CAAvB","file":"InitCanvas.js","sourcesContent":["// this class handles the load and the canva for a nrrd\r\n// Using programming based on prototype: https://javascript.info/class\r\n// This class should be improved:\r\n//   - Canvas Width and height\r\n\r\nInitCanvas = function (IdDiv, Filename) {\r\n\r\n\r\n    this.IdDiv = IdDiv;\r\n    this.Filename = Filename\r\n}\r\n\r\nInitCanvas.prototype = {\r\n\r\n    constructor: InitCanvas,\r\n\r\n    init: function () {\r\n\r\n        this.container = document.getElementById(this.IdDiv);\r\n\r\n        // this should be changed.\r\n        this.container.innerHeight = 600;\r\n        this.container.innerWidth = 800;\r\n\r\n        //These statenments should be changed to improve the image position\r\n        this.camera = new THREE.PerspectiveCamera(60, this.container.innerWidth / this.container.innerHeight, 0.01, 1e10);\r\n        this.camera.position.z = 300;\r\n\r\n        let scene = new THREE.Scene();\r\n        scene.add(this.camera);\r\n\r\n        // light\r\n\r\n        let dirLight = new THREE.DirectionalLight(0xffffff);\r\n        dirLight.position.set(200, 200, 1000).normalize();\r\n\r\n        this.camera.add(dirLight);\r\n        this.camera.add(dirLight.target);\r\n\r\n\r\n        // read file\r\n\r\n        let loader = new THREE.NRRDLoader();\r\n        loader.load(this.Filename, function (volume) {\r\n\r\n            //z plane\r\n            let sliceZ = volume.extractSlice('z', Math.floor(volume.RASDimensions[2] / 4));\r\n\r\n            this.container.innerWidth = sliceZ.iLength;\r\n            this.container.innerHeight = sliceZ.jLength;\r\n\r\n            sliceZ.mesh.material.color.setRGB(0, 1, 1);\r\n\r\n\r\n            console.log('Our slice is: ', sliceZ);\r\n\r\n            scene.add(sliceZ.mesh);\r\n        }.bind(this));\r\n\r\n\r\n        this.scene = scene;\r\n\r\n\r\n        // renderer\r\n        this.renderer = new THREE.WebGLRenderer({alpha: true});\r\n        this.renderTarget = new THREE.WebGLRenderTarget(this.renderer.domElement.clientWidth, this.renderer.domElement.clientHeight);\r\n        this.renderer.setPixelRatio(this.container.devicePixelRatio);\r\n        this.renderer.setSize(this.container.innerWidth, this.container.innerHeight);\r\n\r\n        // add canvas in container\r\n        this.container.appendChild(this.renderer.domElement);\r\n\r\n\r\n    },\r\n\r\n    animate: function () {\r\n\r\n        this.renderer.render(this.scene, this.camera, this.renderTarget);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n"]}