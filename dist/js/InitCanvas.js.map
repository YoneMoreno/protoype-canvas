{"version":3,"sources":["../../js/InitCanvas.js"],"names":["InitCanvas","IdDiv","Filename","prototype","constructor","init","container","document","getElementById","innerHeight","innerWidth","camera","THREE","PerspectiveCamera","position","z","scene","Scene","add","dirLight","DirectionalLight","set","normalize","target","loader","NRRDLoader","load","volume","sliceZ","extractSlice","Math","floor","RASDimensions","iLength","jLength","mesh","bind","renderer","WebGLRenderer","alpha","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","animate","render"],"mappings":";;AACA;AACA;AACA;AACA;;AAEAA,aAAa,oBAAWC,KAAX,EAAkBC,QAAlB,EAA6B;;AAGtC,aAAKD,KAAL,GAAaA,KAAb;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACH,CALD;;AAOAF,WAAWG,SAAX,GAAuB;;AAEnBC,qBAAaJ,UAFM;;AAInBK,cAAM,gBAAW;;AAEb,qBAAKC,SAAL,GAAiBC,SAASC,cAAT,CAAyB,KAAKP,KAA9B,CAAjB;;AAEA;AACA;AACA,qBAAKK,SAAL,CAAeG,WAAf,GAA6B,GAA7B;AACA,qBAAKH,SAAL,CAAeI,UAAf,GAA4B,GAA5B;;AAEA;AACA,qBAAKC,MAAL,GAAc,IAAIC,MAAMC,iBAAV,CAA6B,EAA7B,EAAiC,KAAKP,SAAL,CAAeI,UAAf,GAA4B,KAAKJ,SAAL,CAAeG,WAA5E,EAAyF,IAAzF,EAA+F,IAA/F,CAAd;AACA,qBAAKE,MAAL,CAAYG,QAAZ,CAAqBC,CAArB,GAAyB,GAAzB;;AAEA,oBAAIC,QAAQ,IAAIJ,MAAMK,KAAV,EAAZ;AACAD,sBAAME,GAAN,CAAW,KAAKP,MAAhB;;AAEA;;AAEA,oBAAIQ,WAAW,IAAIP,MAAMQ,gBAAV,CAA4B,QAA5B,CAAf;AACAD,yBAASL,QAAT,CAAkBO,GAAlB,CAAuB,GAAvB,EAA4B,GAA5B,EAAiC,IAAjC,EAAwCC,SAAxC;;AAEA,qBAAKX,MAAL,CAAYO,GAAZ,CAAiBC,QAAjB;AACA,qBAAKR,MAAL,CAAYO,GAAZ,CAAiBC,SAASI,MAA1B;;AAGA;;AAEA,oBAAIC,SAAS,IAAIZ,MAAMa,UAAV,EAAb;AACAD,uBAAOE,IAAP,CAAa,KAAKxB,QAAlB,EAA6B,UAAWyB,MAAX,EAAoB;;AAE7C;AACA,4BAAIC,SAASD,OAAOE,YAAP,CAAoB,GAApB,EAAwBC,KAAKC,KAAL,CAAWJ,OAAOK,aAAP,CAAqB,CAArB,IAAwB,CAAnC,CAAxB,CAAb;;AAEA;AACA,6BAAK1B,SAAL,CAAeI,UAAf,GAA4BkB,OAAOK,OAAnC;AACA,6BAAK3B,SAAL,CAAeG,WAAf,GAA6BmB,OAAOM,OAApC;;AAEAlB,8BAAME,GAAN,CAAWU,OAAOO,IAAlB;AACH,iBAV4B,CAU3BC,IAV2B,CAUtB,IAVsB,CAA7B;;AAaA,qBAAKpB,KAAL,GAAaA,KAAb;;AAEA;;AAEA,qBAAKqB,QAAL,GAAgB,IAAIzB,MAAM0B,aAAV,CAAyB,EAAEC,OAAO,IAAT,EAAzB,CAAhB;AACA,qBAAKF,QAAL,CAAcG,aAAd,CAA6B,KAAKlC,SAAL,CAAemC,gBAA5C;AACA;AACA,qBAAKJ,QAAL,CAAcK,OAAd,CAAuB,KAAKpC,SAAL,CAAeI,UAAtC,EAAkD,KAAKJ,SAAL,CAAeG,WAAjE;;AAEA;AACA,qBAAKH,SAAL,CAAeqC,WAAf,CAA4B,KAAKN,QAAL,CAAcO,UAA1C;AAEH,SAzDkB;;AA2DnBC,iBAAS,mBAAY;;AAEjB,qBAAKR,QAAL,CAAcS,MAAd,CAAsB,KAAK9B,KAA3B,EAAkC,KAAKL,MAAvC;AACH;;AA9DkB,CAAvB","file":"InitCanvas.js","sourcesContent":["\r\n// this class handles the load and the canva for a nrrd\r\n// Using programming based on prototype: https://javascript.info/class\r\n// This class should be improved:\r\n//   - Canvas Width and height\r\n\r\nInitCanvas = function ( IdDiv, Filename ) {\r\n    \r\n    \r\n    this.IdDiv = IdDiv;\r\n    this.Filename = Filename\r\n}\r\n\r\nInitCanvas.prototype = {\r\n\r\n    constructor: InitCanvas,\r\n    \r\n    init: function() {\r\n\r\n        this.container = document.getElementById( this.IdDiv );\r\n\r\n        // this should be changed.\r\n        debugger;\r\n        this.container.innerHeight = 600;\r\n        this.container.innerWidth = 800;\r\n\r\n        //These statenments should be changed to improve the image position\r\n        this.camera = new THREE.PerspectiveCamera( 60, this.container.innerWidth / this.container.innerHeight, 0.01, 1e10 );\r\n        this.camera.position.z = 300;\r\n\r\n        let scene = new THREE.Scene();\r\n        scene.add( this.camera );\r\n\r\n        // light\r\n\r\n        let dirLight = new THREE.DirectionalLight( 0xffffff );\r\n        dirLight.position.set( 200, 200, 1000 ).normalize();\r\n\r\n        this.camera.add( dirLight );\r\n        this.camera.add( dirLight.target );\r\n\r\n\r\n        // read file\r\n    \r\n        let loader = new THREE.NRRDLoader();\r\n        loader.load( this.Filename , function ( volume ) {\r\n    \r\n            //z plane\r\n            let sliceZ = volume.extractSlice('z',Math.floor(volume.RASDimensions[2]/4));\r\n\r\n            debugger;\r\n            this.container.innerWidth = sliceZ.iLength;\r\n            this.container.innerHeight = sliceZ.jLength;\r\n\r\n            scene.add( sliceZ.mesh );\r\n        }.bind(this) );\r\n\r\n        \r\n        this.scene = scene;\r\n\r\n        // renderer\r\n\r\n        this.renderer = new THREE.WebGLRenderer( { alpha: true } );\r\n        this.renderer.setPixelRatio( this.container.devicePixelRatio );\r\n        debugger;\r\n        this.renderer.setSize( this.container.innerWidth, this.container.innerHeight );\r\n        \r\n        // add canvas in container\r\n        this.container.appendChild( this.renderer.domElement );\r\n\r\n    },\r\n\r\n    animate: function () {\r\n        \r\n        this.renderer.render( this.scene, this.camera );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n"]}