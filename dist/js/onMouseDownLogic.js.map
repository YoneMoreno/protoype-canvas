{"version":3,"sources":["../../js/onMouseDownLogic.js"],"names":["projectRayAndGetIntersectedObject","raycaster","setFromCamera","mouse","clone","OriginalImg","camera","objects","intersectObjects","scene","children","console","log","calculateClickedPointWindowCoordinates","event","realClickedCanvasX","offsetX","realClickedCanvasY","offsetY","calculateNormalizedClickedPointCoordinates","OriginalImgRenderer","renderer","x","clientX","domElement","offsetLeft","clientWidth","y","clientY","offsetTop","clientHeight","calculateClickedPointColor","target","getRenderTarget","outputBuffer","Uint8Array","width","height","readRenderTargetPixels","pixelIndex","color","r","g","b","a"],"mappings":";;AAAA,IAAIA,oCAAoC,SAApCA,iCAAoC,GAAY;AAChDC,cAAUC,aAAV,CAAwBC,MAAMC,KAAN,EAAxB,EAAuCC,YAAYC,MAAnD;AACA,QAAIC,UAAUN,UAAUO,gBAAV,CAA2BH,YAAYI,KAAZ,CAAkBC,QAA7C,CAAd;;AAEAC,YAAQC,GAAR,CAAYL,OAAZ;AACH,CALD;;AAOA,IAAIM,yCAAyC,SAAzCA,sCAAyC,CAAUC,KAAV,EAAiB;AAC1D,QAAIC,qBAAqBD,MAAME,OAA/B;AACA,QAAIC,qBAAqBH,MAAMI,OAA/B;AACA,WAAO,EAACH,sCAAD,EAAqBE,sCAArB,EAAP;AACH,CAJD;;AAMA,IAAIE,6CAA6C,SAA7CA,0CAA6C,CAAUL,KAAV,EAAiB;AAC9D,QAAIM,sBAAsBf,YAAYgB,QAAtC;AACAlB,UAAMmB,CAAN,GAAY,CAAER,MAAMS,OAAN,GAAgBH,oBAAoBI,UAApB,CAA+BC,UAAjD,IAAgEL,oBAAoBI,UAApB,CAA+BE,WAAjG,GAAiH,CAAjH,GAAqH,CAA/H;AACAvB,UAAMwB,CAAN,GAAU,EAAG,CAAEb,MAAMc,OAAN,GAAgBR,oBAAoBI,UAApB,CAA+BK,SAAjD,IAA+DT,oBAAoBI,UAApB,CAA+BM,YAAjG,IAAkH,CAAlH,GAAsH,CAAhI;AACA,WAAOV,mBAAP;AACH,CALD;;AAOA,IAAIW,6BAA6B,SAA7BA,0BAA6B,CAAUX,mBAAV,EAA+BL,kBAA/B,EAAmDE,kBAAnD,EAAuE;AACpG,QAAIe,SAASZ,oBAAoBa,eAApB,EAAb;AACAtB,YAAQC,GAAR,CAAY,qDAAZ;AACAD,YAAQC,GAAR,CAAYoB,MAAZ;;AAEA,QAAIE,eAAe,IAAIC,UAAJ,CAAef,oBAAoBgB,KAApB,GAA4BhB,oBAAoBiB,MAAhD,GAAyD,CAAxE,CAAnB;;AAEAjB,wBAAoBkB,sBAApB,CAA2CN,MAA3C,EAAmD,CAAnD,EAAsD,CAAtD,EAAyDZ,oBAAoBgB,KAA7E,EAAoFhB,oBAAoBiB,MAAxG,EAAgHH,YAAhH;;AAEA,QAAIK,aAAa,CAAExB,qBAAqBK,oBAAoBgB,KAA1C,GAAmDnB,kBAApD,IAA0E,CAA3F;;AAEA,QAAIuB,QAAQ;AACRC,WAAGP,aAAaK,aAAa,CAA1B,CADK;AAERG,WAAGR,aAAaK,aAAa,CAA1B,CAFK;AAGRI,WAAGT,aAAaK,aAAa,CAA1B,CAHK;AAIRK,WAAGV,aAAaK,aAAa,CAA1B;AAJK,KAAZ;;AAOA5B,YAAQC,GAAR,CAAY,6BAAZ;AACAD,YAAQC,GAAR,CAAY4B,KAAZ;AACH,CApBD","file":"onMouseDownLogic.js","sourcesContent":["let projectRayAndGetIntersectedObject = function () {\r\n    raycaster.setFromCamera(mouse.clone(), OriginalImg.camera);\r\n    var objects = raycaster.intersectObjects(OriginalImg.scene.children);\r\n\r\n    console.log(objects);\r\n};\r\n\r\nlet calculateClickedPointWindowCoordinates = function (event) {\r\n    let realClickedCanvasX = event.offsetX;\r\n    let realClickedCanvasY = event.offsetY;\r\n    return {realClickedCanvasX, realClickedCanvasY};\r\n};\r\n\r\nlet calculateNormalizedClickedPointCoordinates = function (event) {\r\n    let OriginalImgRenderer = OriginalImg.renderer;\r\n    mouse.x = ( ( event.clientX - OriginalImgRenderer.domElement.offsetLeft ) / OriginalImgRenderer.domElement.clientWidth ) * 2 - 1;\r\n    mouse.y = -( ( event.clientY - OriginalImgRenderer.domElement.offsetTop ) / OriginalImgRenderer.domElement.clientHeight ) * 2 + 1\r\n    return OriginalImgRenderer;\r\n};\r\n\r\nlet calculateClickedPointColor = function (OriginalImgRenderer, realClickedCanvasX, realClickedCanvasY) {\r\n    var target = OriginalImgRenderer.getRenderTarget();\r\n    console.log('Our target which should be a WebGLRenderTarget is: ');\r\n    console.log(target);\r\n\r\n    var outputBuffer = new Uint8Array(OriginalImgRenderer.width * OriginalImgRenderer.height * 4);\r\n\r\n    OriginalImgRenderer.readRenderTargetPixels(target, 0, 0, OriginalImgRenderer.width, OriginalImgRenderer.height, outputBuffer);\r\n\r\n    var pixelIndex = ((realClickedCanvasX * OriginalImgRenderer.width) + realClickedCanvasY) * 4;\r\n\r\n    var color = {\r\n        r: outputBuffer[pixelIndex + 0],\r\n        g: outputBuffer[pixelIndex + 1],\r\n        b: outputBuffer[pixelIndex + 2],\r\n        a: outputBuffer[pixelIndex + 3]\r\n    };\r\n\r\n    console.log('Color of clicked pixel is: ');\r\n    console.log(color);\r\n};"]}