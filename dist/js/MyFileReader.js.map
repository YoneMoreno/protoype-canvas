{"version":3,"sources":["../../js/MyFileReader.js"],"names":["readTextFile","file","rawFile","XMLHttpRequest","open","onreadystatechange","readyState","status","allText","responseText","console","log","lineArr","intoLines","firstLineWords","intoWords","secondLineWords","atlas","i","length","atlasJson","JSON","stringify","download","send","text","name","type","a","document","getElementById","Blob","href","URL","createObjectURL","split","lines","wordsArr"],"mappings":";;AAAA,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;;AAExB,QAAIC,UAAU,IAAIC,cAAJ,EAAd;AACAD,YAAQE,IAAR,CAAa,KAAb,EAAoBH,IAApB,EAA0B,KAA1B;AACAC,YAAQG,kBAAR,GAA6B,YAAY;AACrC,YAAIH,QAAQI,UAAR,KAAuB,CAA3B,EAA8B;AAC1B,gBAAIJ,QAAQK,MAAR,KAAmB,GAAnB,IAA0BL,QAAQK,MAAR,IAAkB,CAAhD,EAAmD;AAC/CC,0BAAUN,QAAQO,YAAlB;AACAC,wBAAQC,GAAR,CAAY,sBAAZ,EAAoCH,OAApC;AACA,oBAAII,UAAUC,UAAUL,OAAV,CAAd;AACA,oBAAIM,iBAAiBC,UAAUH,QAAQ,CAAR,CAAV,CAArB;AACA,oBAAII,kBAAkBD,UAAUH,QAAQ,CAAR,CAAV,CAAtB;;AAEAF,wBAAQC,GAAR,CAAY,sBAAZ,EAAoCC,QAAQ,CAAR,CAApC;;AAEA,oBAAIK,QAAQ,EAAZ;AACA,qBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,eAAeK,MAAnC,EAA2CD,GAA3C,EAAgD;AAC5CR,4BAAQC,GAAR,UAAmBO,CAAnB,qCAAoDJ,eAAeI,CAAf,CAApD;AACAR,4BAAQC,GAAR,UAAmBO,CAAnB,sCAAqDF,gBAAgBE,CAAhB,CAArD;AACAD,0BAAMH,eAAeI,CAAf,CAAN,IAA2BF,gBAAgBE,CAAhB,CAA3B;AACH;AACDR,wBAAQC,GAAR,CAAY,gBAAZ,EAA8BM,KAA9B;AACA,oBAAIG,YAAYC,KAAKC,SAAL,CAAeL,KAAf,CAAhB;AACAP,wBAAQC,GAAR,CAAY,oBAAZ,EAAkCS,SAAlC;;AAEAG,yBAASH,SAAT,EAAoB,eAApB,EAAqC,YAArC;AACH;AACJ;AACJ,KAxBD;AAyBAlB,YAAQsB,IAAR,CAAa,IAAb;AACH;;AAED,SAASD,QAAT,CAAkBE,IAAlB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;;AAEhC,QAAIC,IAAIC,SAASC,cAAT,CAAwB,GAAxB,CAAR;AACA,QAAI7B,OAAO,IAAI8B,IAAJ,CAAS,CAACN,IAAD,CAAT,EAAiB,EAACE,MAAMA,IAAP,EAAjB,CAAX;AACAC,MAAEI,IAAF,GAASC,IAAIC,eAAJ,CAAoBjC,IAApB,CAAT;AACA2B,MAAEL,QAAF,GAAaG,IAAb;AACH;;AAED,SAASb,SAAT,CAAmBY,IAAnB,EAAyB;AACrB;AACA;;AAEA,QAAIb,UAAUa,KAAKU,KAAL,CAAW,IAAX,CAAd;;AAEA;;;AAGA,WAAOvB,OAAP;AAGH;;AAED,SAASG,SAAT,CAAmBqB,KAAnB,EAA0B;;AAGtB,QAAIC,WAAWD,MAAMD,KAAN,CAAY,KAAZ,CAAf;;AAGA,WAAOE,QAAP;AAEH","file":"MyFileReader.js","sourcesContent":["function readTextFile(file) {\r\n\r\n    var rawFile = new XMLHttpRequest();\r\n    rawFile.open(\"GET\", file, false);\r\n    rawFile.onreadystatechange = function () {\r\n        if (rawFile.readyState === 4) {\r\n            if (rawFile.status === 200 || rawFile.status == 0) {\r\n                allText = rawFile.responseText;\r\n                console.log('The complete text is', allText);\r\n                let lineArr = intoLines(allText);\r\n                let firstLineWords = intoWords(lineArr[0]);\r\n                let secondLineWords = intoWords(lineArr[1]);\r\n\r\n                console.log('Our  first line is: ', lineArr[0]);\r\n\r\n                let atlas = {};\r\n                for (let i = 0; i < firstLineWords.length; i++) {\r\n                    console.log(`Our ${i} word in the first line is : ${firstLineWords[i]}`);\r\n                    console.log(`Our ${i} word in the SECOND line is : ${secondLineWords[i]}`);\r\n                    atlas[firstLineWords[i]] = secondLineWords[i];\r\n                }\r\n                console.log('The atlas is: ', atlas);\r\n                let atlasJson = JSON.stringify(atlas);\r\n                console.log('Atlas as json is: ', atlasJson);\r\n\r\n                download(atlasJson, 'atlasJson.txt', 'text/plain');\r\n            }\r\n        }\r\n    };\r\n    rawFile.send(null);\r\n}\r\n\r\nfunction download(text, name, type) {\r\n\r\n    var a = document.getElementById(\"a\");\r\n    var file = new Blob([text], {type: type});\r\n    a.href = URL.createObjectURL(file);\r\n    a.download = name;\r\n}\r\n\r\nfunction intoLines(text) {\r\n    // splitting all text data into array \"\\n\" is splitting data from each new line\r\n    //and saving each new line as each element*\r\n\r\n    var lineArr = text.split('\\n');\r\n\r\n    //just to check if it works output lineArr[index] as below\r\n\r\n\r\n    return lineArr;\r\n\r\n\r\n}\r\n\r\nfunction intoWords(lines) {\r\n\r\n\r\n    var wordsArr = lines.split('\" \"');\r\n\r\n\r\n    return wordsArr;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]}