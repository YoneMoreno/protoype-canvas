{"version":3,"sources":["../../js/InitCanvas.js"],"names":["InitCanvas","IdDiv","Filename","prototype","constructor","init","container","document","getElementById","innerHeight","innerWidth","camera","THREE","PerspectiveCamera","position","z","scene","Scene","add","dirLight","DirectionalLight","set","normalize","target","loader","NRRDLoader","load","volume","sliceZ","extractSlice","Math","floor","RASDimensions","iLength","jLength","mesh","bind","renderer","WebGLRenderer","alpha","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","animate","render"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEAA,aAAa,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,QAA3B,EAAqC;;AAE1C,qBAAKD,KAAL,GAAaA,KAAb;AACA,qBAAKC,QAAL,GAAgBA,QAAhB;AACP,CAJD;;AAMAF,WAAWG,SAAX,GAAuB;;AAEfC,6BAAaJ,UAFE;;AAIfK,sBAAM,SAASA,IAAT,GAAgB;;AAEd,qCAAKC,SAAL,GAAiBC,SAASC,cAAT,CAAwB,KAAKP,KAA7B,CAAjB;;AAEA;AACA;AACA,qCAAKK,SAAL,CAAeG,WAAf,GAA6B,GAA7B;AACA,qCAAKH,SAAL,CAAeI,UAAf,GAA4B,GAA5B;;AAEA;AACA,qCAAKC,MAAL,GAAc,IAAIC,MAAMC,iBAAV,CAA4B,EAA5B,EAAgC,KAAKP,SAAL,CAAeI,UAAf,GAA4B,KAAKJ,SAAL,CAAeG,WAA3E,EAAwF,IAAxF,EAA8F,IAA9F,CAAd;AACA,qCAAKE,MAAL,CAAYG,QAAZ,CAAqBC,CAArB,GAAyB,GAAzB;;AAEA,oCAAIC,QAAQ,IAAIJ,MAAMK,KAAV,EAAZ;AACAD,sCAAME,GAAN,CAAU,KAAKP,MAAf;;AAEA;;AAEA,oCAAIQ,WAAW,IAAIP,MAAMQ,gBAAV,CAA2B,QAA3B,CAAf;AACAD,yCAASL,QAAT,CAAkBO,GAAlB,CAAsB,GAAtB,EAA2B,GAA3B,EAAgC,IAAhC,EAAsCC,SAAtC;;AAEA,qCAAKX,MAAL,CAAYO,GAAZ,CAAgBC,QAAhB;AACA,qCAAKR,MAAL,CAAYO,GAAZ,CAAgBC,SAASI,MAAzB;;AAEA;;AAEA,oCAAIC,SAAS,IAAIZ,MAAMa,UAAV,EAAb;AACAD,uCAAOE,IAAP,CAAY,KAAKxB,QAAjB,EAA2B,UAAUyB,MAAV,EAAkB;;AAErC;AACA,oDAAIC,SAASD,OAAOE,YAAP,CAAoB,GAApB,EAAyBC,KAAKC,KAAL,CAAWJ,OAAOK,aAAP,CAAqB,CAArB,IAA0B,CAArC,CAAzB,CAAb;;AAEA;AACA,qDAAK1B,SAAL,CAAeI,UAAf,GAA4BkB,OAAOK,OAAnC;AACA,qDAAK3B,SAAL,CAAeG,WAAf,GAA6BmB,OAAOM,OAApC;;AAEAlB,sDAAME,GAAN,CAAUU,OAAOO,IAAjB;AACP,iCAV0B,CAUzBC,IAVyB,CAUpB,IAVoB,CAA3B;;AAYA,qCAAKpB,KAAL,GAAaA,KAAb;;AAEA;;AAEA,qCAAKqB,QAAL,GAAgB,IAAIzB,MAAM0B,aAAV,CAAwB,EAAEC,OAAO,IAAT,EAAxB,CAAhB;AACA,qCAAKF,QAAL,CAAcG,aAAd,CAA4B,KAAKlC,SAAL,CAAemC,gBAA3C;AACA;AACA,qCAAKJ,QAAL,CAAcK,OAAd,CAAsB,KAAKpC,SAAL,CAAeI,UAArC,EAAiD,KAAKJ,SAAL,CAAeG,WAAhE;;AAEA;AACA,qCAAKH,SAAL,CAAeqC,WAAf,CAA2B,KAAKN,QAAL,CAAcO,UAAzC;AACP,iBAtDc;;AAwDfC,yBAAS,SAASA,OAAT,GAAmB;;AAEpB,qCAAKR,QAAL,CAAcS,MAAd,CAAqB,KAAK9B,KAA1B,EAAiC,KAAKL,MAAtC;AACP;;AA3Dc,CAAvB;AA8DA","file":"InitCanvas.js","sourcesContent":["'use strict';\r\n\r\n// this class handles the load and the canva for a nrrd\r\n// Using programming based on prototype: https://javascript.info/class\r\n// This class should be improved:\r\n//   - Canvas Width and height\r\n\r\nInitCanvas = function InitCanvas(IdDiv, Filename) {\r\n\r\n        this.IdDiv = IdDiv;\r\n        this.Filename = Filename;\r\n};\r\n\r\nInitCanvas.prototype = {\r\n\r\n        constructor: InitCanvas,\r\n\r\n        init: function init() {\r\n\r\n                this.container = document.getElementById(this.IdDiv);\r\n\r\n                // this should be changed.\r\n                debugger;\r\n                this.container.innerHeight = 600;\r\n                this.container.innerWidth = 800;\r\n\r\n                //These statenments should be changed to improve the image position\r\n                this.camera = new THREE.PerspectiveCamera(60, this.container.innerWidth / this.container.innerHeight, 0.01, 1e10);\r\n                this.camera.position.z = 300;\r\n\r\n                var scene = new THREE.Scene();\r\n                scene.add(this.camera);\r\n\r\n                // light\r\n\r\n                var dirLight = new THREE.DirectionalLight(0xffffff);\r\n                dirLight.position.set(200, 200, 1000).normalize();\r\n\r\n                this.camera.add(dirLight);\r\n                this.camera.add(dirLight.target);\r\n\r\n                // read file\r\n\r\n                var loader = new THREE.NRRDLoader();\r\n                loader.load(this.Filename, function (volume) {\r\n\r\n                        //z plane\r\n                        var sliceZ = volume.extractSlice('z', Math.floor(volume.RASDimensions[2] / 4));\r\n\r\n                        debugger;\r\n                        this.container.innerWidth = sliceZ.iLength;\r\n                        this.container.innerHeight = sliceZ.jLength;\r\n\r\n                        scene.add(sliceZ.mesh);\r\n                }.bind(this));\r\n\r\n                this.scene = scene;\r\n\r\n                // renderer\r\n\r\n                this.renderer = new THREE.WebGLRenderer({ alpha: true });\r\n                this.renderer.setPixelRatio(this.container.devicePixelRatio);\r\n                debugger;\r\n                this.renderer.setSize(this.container.innerWidth, this.container.innerHeight);\r\n\r\n                // add canvas in container\r\n                this.container.appendChild(this.renderer.domElement);\r\n        },\r\n\r\n        animate: function animate() {\r\n\r\n                this.renderer.render(this.scene, this.camera);\r\n        }\r\n\r\n};\r\n//# sourceMappingURL=InitCanvas.js.map"]}